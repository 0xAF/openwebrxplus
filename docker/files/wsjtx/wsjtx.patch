diff -ur wsjtx-orig/CMake/Modules/Findhamlib.cmake wsjtx/CMake/Modules/Findhamlib.cmake
--- wsjtx-orig/CMake/Modules/Findhamlib.cmake	2021-05-31 18:56:20.657682124 +0200
+++ wsjtx/CMake/Modules/Findhamlib.cmake	2021-05-31 18:57:03.963994898 +0200
@@ -85,4 +85,4 @@
 # Handle the  QUIETLY and REQUIRED  arguments and set  HAMLIB_FOUND to
 # TRUE if all listed variables are TRUE
 include (FindPackageHandleStandardArgs)
-find_package_handle_standard_args (hamlib DEFAULT_MSG hamlib_INCLUDE_DIRS hamlib_LIBRARIES hamlib_LIBRARY_DIRS)
+find_package_handle_standard_args (hamlib DEFAULT_MSG hamlib_INCLUDE_DIRS hamlib_LIBRARIES)
diff -ur wsjtx-orig/CMakeLists.txt wsjtx/CMakeLists.txt
--- wsjtx-orig/CMakeLists.txt	2021-05-31 18:56:20.657682124 +0200
+++ wsjtx/CMakeLists.txt	2021-05-31 19:08:02.768474060 +0200
@@ -122,7 +122,7 @@
 option (WSJT_QDEBUG_TO_FILE "Redirect Qt debuging messages to a trace file.")
 option (WSJT_SOFT_KEYING "Apply a ramp to CW keying envelope to reduce transients." ON)
 option (WSJT_SKIP_MANPAGES "Skip *nix manpage generation.")
-option (WSJT_GENERATE_DOCS "Generate documentation files." ON)
+option (WSJT_GENERATE_DOCS "Generate documentation files.")
 option (WSJT_RIG_NONE_CAN_SPLIT "Allow split operation with \"None\" as rig.")
 option (WSJT_TRACE_UDP "Debugging option that turns on UDP message protocol diagnostics.")
 option (WSJT_BUILD_UTILS "Build simulators and code demonstrators." ON)
@@ -169,74 +169,7 @@
   )
 
 set (wsjt_qt_CXXSRCS
-  qt_helpers.cpp
-  widgets/MessageBox.cpp
-  MetaDataRegistry.cpp
-  Network/NetworkServerLookup.cpp
   revision_utils.cpp
-  L10nLoader.cpp
-  WFPalette.cpp
-  Radio.cpp
-  RadioMetaType.cpp
-  NonInheritingProcess.cpp
-  models/IARURegions.cpp
-  models/Bands.cpp
-  models/Modes.cpp
-  models/FrequencyList.cpp
-  models/StationList.cpp
-  widgets/FrequencyLineEdit.cpp
-  widgets/FrequencyDeltaLineEdit.cpp
-  item_delegates/CandidateKeyFilter.cpp
-  item_delegates/ForeignKeyDelegate.cpp
-  validators/LiveFrequencyValidator.cpp
-  GetUserId.cpp
-  Audio/AudioDevice.cpp
-  Transceiver/Transceiver.cpp
-  Transceiver/TransceiverBase.cpp
-  Transceiver/EmulateSplitTransceiver.cpp
-  Transceiver/TransceiverFactory.cpp
-  Transceiver/PollingTransceiver.cpp
-  Transceiver/HamlibTransceiver.cpp
-  Transceiver/HRDTransceiver.cpp
-  Transceiver/DXLabSuiteCommanderTransceiver.cpp
-  Network/NetworkMessage.cpp
-  Network/MessageClient.cpp
-  widgets/LettersSpinBox.cpp
-  widgets/HintedSpinBox.cpp
-  widgets/RestrictedSpinBox.cpp
-  widgets/HelpTextWindow.cpp
-  SampleDownloader.cpp
-  SampleDownloader/DirectoryDelegate.cpp
-  SampleDownloader/Directory.cpp
-  SampleDownloader/FileNode.cpp
-  SampleDownloader/RemoteFile.cpp
-  DisplayManual.cpp
-  MultiSettings.cpp
-  validators/MaidenheadLocatorValidator.cpp
-  validators/CallsignValidator.cpp
-  widgets/SplashScreen.cpp
-  EqualizationToolsDialog.cpp
-  widgets/DoubleClickablePushButton.cpp
-  widgets/DoubleClickableRadioButton.cpp
-  Network/LotWUsers.cpp
-  models/DecodeHighlightingModel.cpp
-  widgets/DecodeHighlightingListView.cpp
-  models/FoxLog.cpp
-  widgets/AbstractLogWindow.cpp
-  widgets/FoxLogWindow.cpp
-  widgets/CabrilloLogWindow.cpp
-  item_delegates/CallsignDelegate.cpp
-  item_delegates/MaidenheadLocatorDelegate.cpp
-  item_delegates/FrequencyDelegate.cpp
-  item_delegates/FrequencyDeltaDelegate.cpp
-  item_delegates/SQLiteDateTimeDelegate.cpp
-  models/CabrilloLog.cpp
-  logbook/AD1CCty.cpp
-  logbook/WorkedBefore.cpp
-  logbook/Multiplier.cpp
-  Network/NetworkAccessManager.cpp
-  widgets/LazyFillComboBox.cpp
-  widgets/CheckableItemComboBox.cpp
   )
 
 set (wsjt_qtmm_CXXSRCS
@@ -857,7 +790,7 @@
 #
 # libhamlib setup
 #
-set (hamlib_STATIC 1)
+set (hamlib_STATIC 0)
 find_package (hamlib 3 REQUIRED)
 find_program (RIGCTL_EXE rigctl)
 find_program (RIGCTLD_EXE rigctld)
@@ -895,9 +828,6 @@
 if (WSJT_GENERATE_DOCS)
   add_subdirectory (doc)
 endif (WSJT_GENERATE_DOCS)
-if (EXISTS ${CMAKE_SOURCE_DIR}/tests AND IS_DIRECTORY ${CMAKE_SOURCE_DIR}/tests)
-  add_subdirectory (tests)
-endif ()
 
 #
 # Library building setup
@@ -1380,60 +1310,6 @@
   target_link_libraries (jt9 wsjt_fort wsjt_cxx fort_qt)
 endif (${OPENMP_FOUND} OR APPLE)
 
-# build the main application
-generate_version_info (wsjtx_VERSION_RESOURCES
-  NAME wsjtx
-  BUNDLE ${PROJECT_BUNDLE_NAME}
-  ICON ${WSJTX_ICON_FILE}
-  )
-
-add_executable (wsjtx MACOSX_BUNDLE
-  ${wsjtx_CXXSRCS}
-  ${wsjtx_GENUISRCS}
-  ${WSJTX_ICON_FILE}
-  ${wsjtx_RESOURCES_RCC}
-  ${wsjtx_VERSION_RESOURCES}
-  )
-
-if (WSJT_CREATE_WINMAIN)
-  set_target_properties (wsjtx PROPERTIES WIN32_EXECUTABLE ON)
-endif (WSJT_CREATE_WINMAIN)
-
-set_target_properties (wsjtx PROPERTIES
-  MACOSX_BUNDLE_INFO_PLIST "${CMAKE_CURRENT_SOURCE_DIR}/Darwin/Info.plist.in"
-  MACOSX_BUNDLE_INFO_STRING "${PROJECT_DESCRIPTION}"
-  MACOSX_BUNDLE_ICON_FILE "${WSJTX_ICON_FILE}"
-  MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}
-  MACOSX_BUNDLE_SHORT_VERSION_STRING "v${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}"
-  MACOSX_BUNDLE_LONG_VERSION_STRING "Version ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}${SCS_VERSION_STR}"
-  MACOSX_BUNDLE_BUNDLE_NAME "${PROJECT_BUNDLE_NAME}"
-  MACOSX_BUNDLE_BUNDLE_EXECUTABLE_NAME "${PROJECT_NAME}"
-  MACOSX_BUNDLE_COPYRIGHT "${PROJECT_COPYRIGHT}"
-  MACOSX_BUNDLE_GUI_IDENTIFIER "org.k1jt.wsjtx"
-  )
-
-target_include_directories (wsjtx PRIVATE ${FFTW3_INCLUDE_DIRS})
-if (APPLE)
-  target_link_libraries (wsjtx wsjt_fort)
-else ()
-  target_link_libraries (wsjtx wsjt_fort_omp)
-  if (OpenMP_C_FLAGS)
-    set_target_properties (wsjtx PROPERTIES
-      COMPILE_FLAGS "${OpenMP_C_FLAGS}"
-      LINK_FLAGS "${OpenMP_C_FLAGS}"
-      )
-  endif ()
-  set_target_properties (wsjtx PROPERTIES
-    Fortran_MODULE_DIRECTORY ${CMAKE_BINARY_DIR}/fortran_modules_omp
-    )
-  if (WIN32)
-    set_target_properties (wsjtx PROPERTIES
-      LINK_FLAGS -Wl,--stack,0x1000000,--heap,0x20000000
-      )
-  endif ()
-endif ()
-target_link_libraries (wsjtx Qt5::SerialPort wsjt_cxx wsjt_qt wsjt_qtmm ${hamlib_LIBRARIES} ${FFTW3_LIBRARIES} ${LIBM_LIBRARIES})
-
 # make a library for WSJT-X UDP servers
 # add_library (wsjtx_udp SHARED ${UDP_library_CXXSRCS})
 add_library (wsjtx_udp-static STATIC ${UDP_library_CXXSRCS})
@@ -1473,47 +1349,9 @@
 add_executable (wsjtx_app_version AppVersion/AppVersion.cpp ${wsjtx_app_version_VERSION_RESOURCES})
 target_link_libraries (wsjtx_app_version wsjt_qt)
 
-generate_version_info (message_aggregator_VERSION_RESOURCES
-  NAME message_aggregator
-  BUNDLE ${PROJECT_BUNDLE_NAME}
-  ICON ${WSJTX_ICON_FILE}
-  FILE_DESCRIPTION "Example WSJT-X UDP Message Protocol application"
-  )
-add_resources (message_aggregator_RESOURCES /qss ${message_aggregator_STYLESHEETS})
-configure_file (UDPExamples/message_aggregator.qrc.in message_aggregator.qrc @ONLY)
-qt5_add_resources (message_aggregator_RESOURCES_RCC
-  ${CMAKE_CURRENT_BINARY_DIR}/message_aggregator.qrc
-  contrib/QDarkStyleSheet/qdarkstyle/style.qrc
-  )
-add_executable (message_aggregator
-  ${message_aggregator_CXXSRCS}
-  ${message_aggregator_RESOURCES_RCC}
-  ${message_aggregator_VERSION_RESOURCES}
-  )
-target_link_libraries (message_aggregator wsjt_qt Qt5::Widgets wsjtx_udp-static)
-
-if (WSJT_CREATE_WINMAIN)
-  set_target_properties (message_aggregator PROPERTIES WIN32_EXECUTABLE ON)
-endif (WSJT_CREATE_WINMAIN)
-
-if (UNIX)
-  if (NOT WSJT_SKIP_MANPAGES)
-    add_subdirectory (manpages)
-    add_dependencies (wsjtx manpages)
-  endif (NOT WSJT_SKIP_MANPAGES)
-  if (NOT APPLE)
-    add_subdirectory (debian)
-    add_dependencies (wsjtx debian)
-  endif (NOT APPLE)
-endif (UNIX)
-
 #
 # installation
 #
-install (TARGETS wsjtx
-  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT runtime
-  BUNDLE DESTINATION . COMPONENT runtime
-  )
 
 # install (TARGETS wsjtx_udp EXPORT udp
 #   RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
@@ -1532,12 +1370,7 @@
 #   DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/wsjtx
 #   )
 
-install (TARGETS udp_daemon message_aggregator wsjtx_app_version
-  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT runtime
-  BUNDLE DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT runtime
-  )
-
-install (TARGETS jt9 wsprd fmtave fcal fmeasure
+install (TARGETS wsjtx_app_version jt9 wsprd
   RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT runtime
   BUNDLE DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT runtime
   )
@@ -1549,38 +1382,6 @@
   )
 endif(WSJT_BUILD_UTILS)  
 
-install (PROGRAMS
-  ${RIGCTL_EXE}
-  DESTINATION ${CMAKE_INSTALL_BINDIR}
-  #COMPONENT runtime
-  RENAME rigctl-wsjtx${CMAKE_EXECUTABLE_SUFFIX}
-  )
-
-install (PROGRAMS
-  ${RIGCTLD_EXE}
-  DESTINATION ${CMAKE_INSTALL_BINDIR}
-  #COMPONENT runtime
-  RENAME rigctld-wsjtx${CMAKE_EXECUTABLE_SUFFIX}
-  )
-
-install (PROGRAMS
-  ${RIGCTLCOM_EXE}
-  DESTINATION ${CMAKE_INSTALL_BINDIR}
-  #COMPONENT runtime
-  RENAME rigctlcom-wsjtx${CMAKE_EXECUTABLE_SUFFIX}
-  )
-
-install (FILES
-  README
-  COPYING
-  AUTHORS
-  THANKS
-  NEWS
-  BUGS
-  DESTINATION ${CMAKE_INSTALL_DOCDIR}
-  #COMPONENT runtime
-  )
-
 install (FILES
   cty.dat
   cty.dat_copyright.txt
@@ -1589,13 +1390,6 @@
   #COMPONENT runtime
   )
 
-install (DIRECTORY
-  example_log_configurations
-  DESTINATION ${CMAKE_INSTALL_DOCDIR}
-  FILES_MATCHING REGEX "^.*[^~]$"
-  #COMPONENT runtime
-  )
-
 #
 # Mac installer files
 #
@@ -1648,22 +1442,6 @@
   )
 
 
-if (NOT WIN32 AND NOT APPLE)
-  # install a desktop file so wsjtx appears in the application start
-  # menu with an icon
-  install (
-    FILES wsjtx.desktop message_aggregator.desktop
-    DESTINATION share/applications
-    #COMPONENT runtime
-    )
-  install (
-    FILES icons/Unix/wsjtx_icon.png
-    DESTINATION share/pixmaps
-    #COMPONENT runtime
-    )
-endif (NOT WIN32 AND NOT APPLE)
-
-
 #
 # bundle fixup only done in non-Debug configurations
 #
Only in wsjtx/: CMakeLists.txt.orig
Only in wsjtx/: .idea
